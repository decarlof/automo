#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
AuTomo with Tomosaic.
"""

import tomosaic
import time
import pickle
import os
import sys
import argparse
import dxchange
import h5py
try:
    from mpi4py import MPI
except:
    from tomosaic.util.pseudo import pseudo_comm


try:
    comm = MPI.COMM_WORLD
    rank = comm.Get_rank()
    size = comm.Get_size()
    name = MPI.Get_processor_name()
except:
    comm = pseudo_comm()
    rank = 0
    size = 1


def main(arg):

    parser = argparse.ArgumentParser()
    parser.add_argument('--source', help='location of data files', default='auto')
    parser.add_argument('--dest_folder', help='destination folder', default='auto')
    parser.add_argument('--dest_fname', help='destination filename', default='auto')
    parser.add_argument('--method_x', help='method for blending in x direction', default='pyramid')
    parser.add_argument('--depth_x', help='pyramid depth for x blending', default=7)
    parser.add_argument('--blur_x', help='pyramid blur for x blending', default=0.4)
    parser.add_argument('--method_y', help='method for boending in y direction. Use none for same setting as x', default='none')
    parser.add_argument('--depth_y', help='pyramid depth for y blending', default=7)
    parser.add_argument('--blur_y', help='pyramid blur for y blending', default=0.4)
    parser.add_argument("--ds", help="downsample levels",default=1)
    args = parser.parse_args()

    ds = int(args.ds)
    src_folder = args.source if args.source != 'auto' else 'data_raw_{}x'.format(ds)
    dest_folder = args.dest_folder if args.dest_folder != 'auto' else 'fulldata_flatcorr_{}x'.format(ds)
    dest_fname = args.dest_fname if args.dest_fname != 'auto' else 'fulldata_flatcorr_{}x.h5'.format(ds)

    f_pattern = 1
    prefix = ''
    file_list = tomosaic.get_files(src_folder, prefix, type='h5')
    file_grid = tomosaic.start_file_grid(file_list, pattern=f_pattern)

    shift_grid = tomosaic.file2grid("shifts.txt")
    shift_grid = tomosaic.absolute_shift_grid(shift_grid, file_grid)
    shift_grid = shift_grid / float(ds)

    ##
    blend_method = args.method_x
    blend_options = {}
    if blend_method == 'pyramid':
        blend_options['depth'] = int(args.depth_x)
        blend_options['blur'] = float(args.blur_x)
  
    ##
    blend_method2 = args.method_y
    blend_options2 = {}
    if blend_method2 == 'none':
        blend_method2 = None
    elif blend_method2 == 'pyramid':
        blend_options2['depth'] = int(args.depth_y)
        blend_options2['blur'] = float(args.blur_y)


    t0 = time.time()

    tomosaic.total_fusion(src_folder, dest_folder, dest_fname, file_grid,
                               shift_grid.astype('int'), blend_method=blend_method, blend_method2=blend_method2,
                               color_correction=False, blend_options=blend_options, blend_options2=blend_options2,
                               dtype='float16')

    f = h5py.File(os.path.join('fulldata_flatcorr_1x', 'fulldata_flatcorr_1x.h5'), 'r')
    dat = f['exchange/data']
    dxchange.write_tiff(dat[0], os.path.join('fulldata_flatcorr_1x', 'proj_0'), dtype='float32', overwrite=True)
    last_ind = dat.shape[0] - 1
    dxchange.write_tiff(dat[last_ind], os.path.join('fulldata_flatcorr_1x', 'proj_{}'.format(last_ind)),
                        dtype='float32', overwrite=True)
    f.close()

    print('Total time: {}s'.format(time.time() - t0))


if __name__ == "__main__":
    main(sys.argv[1:])
